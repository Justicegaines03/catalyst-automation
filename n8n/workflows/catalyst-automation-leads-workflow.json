{
  "name": "Catalyst-Automation Leads",
  "nodes": [
    {
      "parameters": {
        "height": 280,
        "width": 850,
        "color": 1,
        "content": "## ENTRY & PROCESSING"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [120, 80],
      "id": "sticky-entry",
      "name": "Entry & Processing Section"
    },
    {
      "parameters": {
        "height": 500,
        "width": 300,
        "color": 2,
        "content": "## HOT LEAD PATH"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1000, 420],
      "id": "sticky-hot",
      "name": "Hot Lead Path Section"
    },
    {
      "parameters": {
        "height": 500,
        "width": 300,
        "color": 3,
        "content": "## WARM LEAD PATH"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1000, 950],
      "id": "sticky-warm",
      "name": "Warm Lead Path Section"
    },
    {
      "parameters": {
        "height": 620,
        "width": 420,
        "color": 4,
        "content": "## COLD LEAD PATH"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1000, 1480],
      "id": "sticky-cold",
      "name": "Cold Lead Path Section"
    },
    {
      "parameters": {
        "height": 200,
        "width": 300,
        "color": 5,
        "content": "## ANALYTICS & KPI TRACKING"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [500, 420],
      "id": "sticky-analytics",
      "name": "Analytics Section"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {
          "query": "( (\"quote\" OR \"estimate\" OR \"service\" OR \"repair\" OR \"install\" OR \"ac repair\" OR \"furnace install\" OR \"broken\" OR \"not working\" OR \"no heat\" OR \"no cool\" OR \"maintenance\") OR subject:(urgent OR emergency OR asap) ) AND -(\"unsubscribe\" OR \"payment\" OR \"newsletter\" OR \"invoice\" OR \"job application\")"
        },
        "format": "full"
      },
      "name": "Gmail Trigger - HVAC Lead Capture",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [160, 140],
      "id": "gmail-trigger-1",
      "webhookId": "",
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      },
      "notes": "Monitors dedicated leads@hvacvendor.com with precision filters for HVAC-related keywords while excluding spam and non-lead communications."
    },
    {
      "parameters": {
        "functionCode": "// SECTION 1: Extract email data\nconst items = $input.all();\nconst results = [];\n\nfor (const item of items) {\n  const emailData = item.json;\n  const subject = emailData.subject || '';\n  const body = (emailData.textPlain || emailData.snippet || '').toLowerCase();\n  const from = emailData.from || '';\n  const senderEmail = from.match(/[\\w.-]+@[\\w.-]+/)?.[0] || '';\n  const senderDomain = senderEmail.split('@')[1] || '';\n  \n  // Extract name, phone, address from email body\n  const phoneMatch = body.match(/\\b\\d{3}[-.]?\\d{3}[-.]?\\d{4}\\b/);\n  const zipMatch = body.match(/\\b\\d{5}(-\\d{4})?\\b/);\n  \n  // SECTION 2: Lead Type Classification (Residential vs Commercial)\n  let leadType = 'Residential';\n  let leadTypeConfidence = 'low';\n  \n  // Check for commercial indicators\n  const commercialDomains = ['corp', 'inc', 'llc', 'company', 'properties', 'management'];\n  const commercialKeywords = ['office', 'building', 'facility', 'commercial', 'business', 'retail', 'warehouse', 'property management', 'multiple units', 'our building', 'our facility'];\n  const commercialTitles = ['property manager', 'facility director', 'building owner', 'general manager', 'operations manager', 'facility manager'];\n  \n  const isCommercialDomain = commercialDomains.some(term => senderDomain.includes(term));\n  const hasCommercialKeywords = commercialKeywords.some(keyword => body.includes(keyword));\n  const hasCommercialTitle = commercialTitles.some(title => body.includes(title));\n  \n  // Consumer email domains (strong residential indicators)\n  const consumerDomains = ['gmail.com', 'yahoo.com', 'aol.com', 'hotmail.com', 'outlook.com', 'icloud.com'];\n  const isConsumerDomain = consumerDomains.includes(senderDomain);\n  \n  if (isCommercialDomain || hasCommercialKeywords || hasCommercialTitle) {\n    leadType = 'Commercial';\n    leadTypeConfidence = 'high';\n  } else if (isConsumerDomain) {\n    leadType = 'Residential';\n    leadTypeConfidence = 'high';\n  }\n  \n  results.push({\n    json: {\n      // Original email data\n      originalEmail: emailData,\n      subject: subject,\n      body: body,\n      from: from,\n      senderEmail: senderEmail,\n      senderDomain: senderDomain,\n      receivedAt: new Date().toISOString(),\n      \n      // Parsed contact info\n      phone: phoneMatch?.[0] || '',\n      zipCode: zipMatch?.[0] || '',\n      \n      // Classification\n      leadType: leadType,\n      leadTypeConfidence: leadTypeConfidence,\n      \n      // Prepare for scoring\n      bodyLower: body,\n      subjectLower: subject.toLowerCase()\n    }\n  });\n}\n\nreturn results;"
      },
      "name": "Lead Parser & Classifier",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [380, 140],
      "id": "parser-classifier-1",
      "notes": "Extracts key data from email and classifies as Residential or Commercial based on domain, keywords, and job titles."
    },
    {
      "parameters": {
        "functionCode": "// HVAC BANT SCORING MATRIX\nconst items = $input.all();\nconst results = [];\n\nfor (const item of items) {\n  let score = 0;\n  const data = item.json;\n  const body = data.bodyLower;\n  const subject = data.subjectLower;\n  const leadType = data.leadType;\n  const zipCode = data.zipCode;\n  \n  // Track scoring breakdown for transparency\n  const scoreBreakdown = {};\n  \n  // URGENCY SCORING (30 points max)\n  const highUrgencyKeywords = ['urgent', 'emergency', 'asap', 'need now', 'broken', 'not working', 'no heat', 'no cool', 'leaking', 'stopped', 'completely stopped'];\n  const moderateUrgencyKeywords = ['soon', 'this week', 'schedule', 'before', 'need help'];\n  \n  if (highUrgencyKeywords.some(kw => body.includes(kw) || subject.includes(kw))) {\n    score += 30;\n    scoreBreakdown.urgency = { points: 30, level: 'High' };\n  } else if (moderateUrgencyKeywords.some(kw => body.includes(kw) || subject.includes(kw))) {\n    score += 15;\n    scoreBreakdown.urgency = { points: 15, level: 'Moderate' };\n  } else {\n    scoreBreakdown.urgency = { points: 0, level: 'Low' };\n  }\n  \n  // SERVICE SPECIFICITY (20 points max)\n  const specificServiceKeywords = ['quote for', 'install', 'replace', 'replacement', 'fix my', 'repair my', 'service my', 'furnace', 'ac unit', 'hvac system', 'air conditioner', 'heat pump', 'thermostat'];\n  const generalInquiryKeywords = ['question about', 'information on', 'how much'];\n  \n  if (specificServiceKeywords.some(kw => body.includes(kw))) {\n    score += 20;\n    scoreBreakdown.serviceSpecificity = { points: 20, type: 'Specific' };\n  } else if (generalInquiryKeywords.some(kw => body.includes(kw))) {\n    score += 5;\n    scoreBreakdown.serviceSpecificity = { points: 5, type: 'General' };\n  } else {\n    scoreBreakdown.serviceSpecificity = { points: 0, type: 'Unclear' };\n  }\n  \n  // AUTHORITY SCORING\n  if (leadType === 'Residential') {\n    // Homeowner assumed to have authority\n    score += 5;\n    scoreBreakdown.authority = { points: 5, type: 'Homeowner (Implicit)' };\n  } else if (leadType === 'Commercial') {\n    const authorityTitles = ['property manager', 'facility director', 'owner', 'general manager', 'building manager', 'operations manager'];\n    if (authorityTitles.some(title => body.includes(title))) {\n      score += 15;\n      scoreBreakdown.authority = { points: 15, type: 'Decision Maker' };\n    } else {\n      scoreBreakdown.authority = { points: 0, type: 'Unknown' };\n    }\n  }\n  \n  // BUDGET INDICATORS (20 points max)\n  const financingKeywords = ['financing', 'payment plan', 'monthly payments'];\n  const budgetMentioned = body.match(/budget.*\\$/) || body.match(/\\$[\\d,]+/);\n  \n  if (budgetMentioned) {\n    const budgetPoints = leadType === 'Commercial' ? 20 : 15;\n    score += budgetPoints;\n    scoreBreakdown.budget = { points: budgetPoints, type: 'Explicit Budget' };\n  } else if (financingKeywords.some(kw => body.includes(kw))) {\n    score += 10;\n    scoreBreakdown.budget = { points: 10, type: 'Financing Inquiry' };\n  } else {\n    scoreBreakdown.budget = { points: 0, type: 'Not Mentioned' };\n  }\n  \n  // CONTACT COMPLETENESS (10 points)\n  const hasPhone = data.phone !== '';\n  const hasZip = data.zipCode !== '';\n  \n  if (hasPhone && hasZip) {\n    score += 10;\n    scoreBreakdown.contactInfo = { points: 10, status: 'Complete' };\n  } else if (hasPhone || hasZip) {\n    score += 5;\n    scoreBreakdown.contactInfo = { points: 5, status: 'Partial' };\n  } else {\n    scoreBreakdown.contactInfo = { points: 0, status: 'Incomplete' };\n  }\n  \n  // PAIN POINTS (15 points)\n  const painPointKeywords = ['old system', 'high bills', 'energy costs', 'frequent repairs', 'noisy', 'loud', 'inefficient', 'breaking down'];\n  if (painPointKeywords.some(kw => body.includes(kw))) {\n    score += 15;\n    scoreBreakdown.painPoints = { points: 15, detected: true };\n  } else {\n    scoreBreakdown.painPoints = { points: 0, detected: false };\n  }\n  \n  // LEAD TYPE BONUS (Commercial)\n  if (leadType === 'Commercial') {\n    score += 15;\n    scoreBreakdown.leadTypeBonus = { points: 15, type: 'Commercial' };\n  } else {\n    scoreBreakdown.leadTypeBonus = { points: 0, type: 'Residential' };\n  }\n  \n  // NEGATIVE SCORING\n  // Out of service area check\n  const serviceAreaZips = ['90001', '90002', '90003', '90004', '90005']; // REPLACE WITH ACTUAL SERVICE AREA\n  if (zipCode && !serviceAreaZips.includes(zipCode)) {\n    score -= 50;\n    scoreBreakdown.negativeFactors = { points: -50, reason: 'Out of Service Area' };\n  }\n  \n  // Non-HVAC service check\n  const nonHVACKeywords = ['plumbing', 'plumber', 'electrical', 'electrician', 'roofing', 'roofer'];\n  if (nonHVACKeywords.some(kw => body.includes(kw))) {\n    score -= 50;\n    scoreBreakdown.negativeFactors = { points: -50, reason: 'Non-HVAC Service' };\n  }\n  \n  // DETERMINE QUALIFICATION TIER\n  let qualificationTier = '';\n  let qualificationLabel = '';\n  \n  if (score > 60) {\n    qualificationTier = 'SQL';\n    qualificationLabel = 'Hot Lead - Sales Qualified';\n  } else if (score >= 31 && score <= 60) {\n    qualificationTier = 'MQL';\n    qualificationLabel = 'Warm Lead - Marketing Qualified';\n  } else {\n    qualificationTier = 'Cold';\n    qualificationLabel = 'Cold Lead - Unqualified';\n  }\n  \n  results.push({\n    json: {\n      ...data,\n      leadScore: score,\n      scoreBreakdown: scoreBreakdown,\n      qualificationTier: qualificationTier,\n      qualificationLabel: qualificationLabel,\n      scoredAt: new Date().toISOString()\n    }\n  });\n}\n\nreturn results;"
      },
      "name": "HVAC BANT Scoring Engine",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [600, 140],
      "id": "scoring-engine-1",
      "notes": "Implements the complete HVAC BANT scoring matrix: Urgency (30), Service Specificity (20), Authority (15), Budget (20), Contact Info (10), Pain Points (15), Lead Type Bonus (15). Threshold: >60=Hot, 31-60=Warm, <=30=Cold"
    },
    {
      "parameters": {
        "rules": {
          "rules": [
            {
              "conditions": {
                "all": [
                  {
                    "value1": "={{$json.leadScore}}",
                    "operation": "largerThan",
                    "value2": 60
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "hotLead"
            },
            {
              "conditions": {
                "all": [
                  {
                    "value1": "={{$json.leadScore}}",
                    "operation": "between",
                    "value2": "31,60"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "warmLead"
            },
            {
              "conditions": {
                "all": [
                  {
                    "value1": "={{$json.leadScore}}",
                    "operation": "smallerThan",
                    "value2": 31
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "coldLead"
            }
          ]
        }
      },
      "name": "Lead Router (by Score)",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [820, 220],
      "id": "lead-router-1",
      "notes": "Routes leads to appropriate action protocols based on qualification score."
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "append",
        "sheetId": "={{ $json.sheetId }}",
        "range": "Leads!A:Z",
        "options": {
          "valueInputMode": "USER_ENTERED"
        },
        "dataMode": "autoMapInputData"
      },
      "name": "Log to CRM/Google Sheets - Hot Lead",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [1060, 500],
      "id": "crm-hot-1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2",
          "name": "Google Sheets account"
        }
      },
      "notes": "Creates immediate CRM record for hot lead with full contact details, score breakdown, and timestamp."
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://hooks.slack.com/services/YOUR_WEBHOOK_URL",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "=🔥 *HOT LEAD ALERT* 🔥\\n\\n*Score:* {{$json.leadScore}} / 100\\n*Type:* {{$json.leadType}}\\n*From:* {{$json.from}}\\n*Phone:* {{$json.phone}}\\n*Service Requested:* {{$json.subject}}\\n\\n*Urgency:* {{$json.scoreBreakdown.urgency.level}}\\n*Action:* Sales team - respond within 5 minutes\\n\\n📋 <https://your-crm.com/lead/{{$json.senderEmail}}|View in CRM>"
            }
          ]
        },
        "options": {}
      },
      "name": "Notify Sales Team - Slack (Hot Lead)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1060, 660],
      "id": "slack-notify-hot-1",
      "notes": "Sends instant high-priority notification to #hot-leads Slack channel with all key lead details and direct CRM link."
    },
    {
      "parameters": {
        "fromEmail": "leads@hvacvendor.com",
        "toEmail": "={{$json.senderEmail}}",
        "subject": "=Re: {{$json.subject}} - We received your request!",
        "emailType": "html",
        "message": "=<html>\\n<body style='font-family: Arial, sans-serif; line-height: 1.6; color: #333;'>\\n  <h2 style='color: #0066cc;'>Thank You for Your HVAC Service Inquiry!</h2>\\n  \\n  <p>Hi there,</p>\\n  \\n  <p>We received your message regarding <strong>{{$json.subject}}</strong>, and we understand how important it is to get your system working properly.</p>\\n  \\n  <p><strong>Here's what happens next:</strong></p>\\n  <ul>\\n    <li>Our HVAC specialist will call you from <strong>(555) 123-4567</strong> within the next <strong>5-10 minutes</strong></li>\\n    <li>They'll discuss your specific needs and can schedule a same-day or next-day appointment</li>\\n  </ul>\\n  \\n  <p><strong>Prefer to book a time right now?</strong></p>\\n  <p>Click here to view our calendar and select a time that works best for you:<br>\\n  <a href='https://calendly.com/your-hvac-specialist' style='display: inline-block; margin-top: 10px; padding: 12px 24px; background-color: #0066cc; color: white; text-decoration: none; border-radius: 5px;'>📅 Schedule Your Appointment</a></p>\\n  \\n  <p>We look forward to helping you!</p>\\n  \\n  <p>Best regards,<br>\\n  <strong>Your HVAC Company</strong><br>\\n  (555) 123-4567<br>\\n  leads@hvacvendor.com</p>\\n</body>\\n</html>",
        "options": {
          "appendAttribution": false
        }
      },
      "name": "Send Personalized Response - Hot Lead",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1060, 820],
      "id": "email-response-hot-1",
      "credentials": {
        "smtp": {
          "id": "3",
          "name": "SMTP account"
        }
      },
      "notes": "Sends immediate personalized acknowledgment email with clear next steps and self-service scheduling link."
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "append",
        "sheetId": "={{ $json.sheetId }}",
        "range": "Leads!A:Z",
        "options": {
          "valueInputMode": "USER_ENTERED"
        },
        "dataMode": "autoMapInputData"
      },
      "name": "Log to CRM - Warm Lead",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [1060, 1040],
      "id": "crm-warm-1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2",
          "name": "Google Sheets account"
        }
      },
      "notes": "Creates CRM record for warm lead tagged for 2-4 week nurture campaign."
    },
    {
      "parameters": {
        "fromEmail": "leads@hvacvendor.com",
        "toEmail": "={{$json.senderEmail}}",
        "subject": "=Re: {{$json.subject}} - HVAC Information & Resources",
        "emailType": "html",
        "message": "=<html>\\n<body style='font-family: Arial, sans-serif; line-height: 1.6; color: #333;'>\\n  <h2 style='color: #0066cc;'>Thank You for Your Interest!</h2>\\n  \\n  <p>Hi there,</p>\\n  \\n  <p>Thank you for reaching out about {{$json.subject}}. We'd love to help you with your HVAC needs!</p>\\n  \\n  <p>To help you make an informed decision, we've put together some helpful resources:</p>\\n  \\n  <ul>\\n    <li><a href='https://yourwebsite.com/blog/hvac-buying-guide'>Complete HVAC Buying Guide</a></li>\\n    <li><a href='https://yourwebsite.com/case-studies'>Recent Customer Success Stories</a></li>\\n    <li><a href='https://yourwebsite.com/calculator'>Energy Savings Calculator</a></li>\\n  </ul>\\n  \\n  <p><strong>Ready to discuss your project?</strong><br>\\n  <a href='https://calendly.com/your-hvac-specialist' style='display: inline-block; margin-top: 10px; padding: 12px 24px; background-color: #0066cc; color: white; text-decoration: none; border-radius: 5px;'>Schedule a Free Consultation</a></p>\\n  \\n  <p>One of our HVAC specialists will also reach out within 24-48 hours to answer any questions.</p>\\n  \\n  <p>Best regards,<br>\\n  <strong>Your HVAC Company</strong></p>\\n</body>\\n</html>",
        "options": {}
      },
      "name": "Send Nurture Email - Warm Lead",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1060, 1280],
      "id": "email-response-warm-1",
      "credentials": {
        "smtp": {
          "id": "3",
          "name": "SMTP account"
        }
      },
      "notes": "Initial nurture email with educational resources and soft call-to-action."
    },
    {
      "parameters": {
        "functionCode": "// Check disqualification reasons for cold leads\nconst items = $input.all();\nconst results = [];\n\nfor (const item of items) {\n  const data = item.json;\n  let disqualificationReason = '';\n  let actionPath = '';\n  \n  // Check score breakdown for negative factors\n  if (data.scoreBreakdown.negativeFactors) {\n    disqualificationReason = data.scoreBreakdown.negativeFactors.reason;\n    \n    if (disqualificationReason === 'Out of Service Area') {\n      actionPath = 'referral';\n    } else if (disqualificationReason === 'Non-HVAC Service') {\n      actionPath = 'referral';\n    } else {\n      actionPath = 'long-term-nurture';\n    }\n  } else {\n    // Low score but no hard disqualification\n    disqualificationReason = 'Low engagement score';\n    actionPath = 'long-term-nurture';\n  }\n  \n  results.push({\n    json: {\n      ...data,\n      disqualificationReason: disqualificationReason,\n      actionPath: actionPath\n    }\n  });\n}\n\nreturn results;"
      },
      "name": "Analyze Disqualification Reason",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1060, 1560],
      "id": "disqualify-analyzer-1",
      "notes": "Determines if cold lead should receive referral or long-term nurture based on disqualification reason."
    },
    {
      "parameters": {
        "rules": {
          "rules": [
            {
              "conditions": {
                "all": [
                  {
                    "value1": "={{$json.actionPath}}",
                    "operation": "equals",
                    "value2": "referral"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "sendReferral"
            },
            {
              "conditions": {
                "all": [
                  {
                    "value1": "={{$json.actionPath}}",
                    "operation": "equals",
                    "value2": "long-term-nurture"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "longTermNurture"
            }
          ]
        }
      },
      "name": "Cold Lead Router",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [1060, 1780],
      "id": "cold-router-1",
      "notes": "Routes cold leads to either referral email or long-term nurture campaign."
    },
    {
      "parameters": {
        "fromEmail": "leads@hvacvendor.com",
        "toEmail": "={{$json.senderEmail}}",
        "subject": "=Re: {{$json.subject}} - Recommended HVAC Partner",
        "emailType": "html",
        "message": "=<html>\\n<body style='font-family: Arial, sans-serif; line-height: 1.6; color: #333;'>\\n  <h2 style='color: #0066cc;'>Thank You for Your Inquiry</h2>\\n  \\n  <p>Hi there,</p>\\n  \\n  <p>Thank you for reaching out regarding {{$json.subject}}.</p>\\n  \\n  <p>{{#if (eq disqualificationReason 'Out of Service Area')}}\\n  Unfortunately, your location appears to be outside our current service area. However, we want to ensure you receive the quality service you deserve.\\n  {{else if (eq disqualificationReason 'Non-HVAC Service')}}\\n  While we specialize exclusively in HVAC services, we want to make sure you're connected with the right professional for your needs.\\n  {{/if}}</p>\\n  \\n  <p><strong>We recommend:</strong><br>\\n  <a href='https://partner-company.com' style='font-size: 18px; color: #0066cc;'>Partner Company Name</a><br>\\n  Phone: (555) 987-6543<br>\\n  Email: info@partner-company.com</p>\\n  \\n  <p>They have an excellent reputation and we're confident they can help you.</p>\\n  \\n  <p>Best wishes,<br>\\n  <strong>Your HVAC Company</strong></p>\\n</body>\\n</html>",
        "options": {}
      },
      "name": "Send Referral Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1240, 1680],
      "id": "email-referral-1",
      "credentials": {
        "smtp": {
          "id": "3",
          "name": "SMTP account"
        }
      },
      "notes": "Sends helpful referral to partner company for out-of-area or non-HVAC service requests."
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "append",
        "sheetId": "={{ $json.sheetId }}",
        "range": "Leads!A:Z",
        "options": {
          "valueInputMode": "USER_ENTERED"
        },
        "dataMode": "autoMapInputData"
      },
      "name": "Log to CRM - Cold/Nurture",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [1240, 1880],
      "id": "crm-cold-1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2",
          "name": "Google Sheets account"
        }
      },
      "notes": "Creates CRM record tagged for 6-12 month educational nurture campaign."
    },
    {
      "parameters": {
        "fromEmail": "leads@hvacvendor.com",
        "toEmail": "={{$json.senderEmail}}",
        "subject": "=Re: {{$json.subject}} - Helpful HVAC Resources",
        "emailType": "html",
        "message": "=<html>\\n<body style='font-family: Arial, sans-serif; line-height: 1.6; color: #333;'>\\n  <h2 style='color: #0066cc;'>Thank You for Your Interest</h2>\\n  \\n  <p>Hi there,</p>\\n  \\n  <p>Thank you for your inquiry about HVAC services. While you may not be ready to move forward right now, we wanted to share some resources that might be helpful:</p>\\n  \\n  <ul>\\n    <li><a href='https://yourwebsite.com/blog/hvac-maintenance-tips'>5 Tips to Lower Your Energy Bills</a></li>\\n    <li><a href='https://yourwebsite.com/blog/seasonal-checklist'>Seasonal HVAC Maintenance Checklist</a></li>\\n    <li><a href='https://yourwebsite.com/blog/seer-ratings'>Understanding SEER Ratings</a></li>\\n  </ul>\\n  \\n  <p>We'll occasionally send you helpful tips and reminders. When you're ready to discuss your HVAC needs, we're here to help!</p>\\n  \\n  <p><a href='https://calendly.com/your-hvac-specialist'>Schedule a consultation anytime</a></p>\\n  \\n  <p>Best regards,<br>\\n  <strong>Your HVAC Company</strong></p>\\n</body>\\n</html>",
        "options": {}
      },
      "name": "Send Long-Term Nurture Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1240, 2020],
      "id": "email-nurture-cold-1",
      "credentials": {
        "smtp": {
          "id": "3",
          "name": "SMTP account"
        }
      },
      "notes": "Sends initial educational email for long-term nurture sequence."
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "append",
        "sheetId": "={{ $json.sheetId }}",
        "range": "KPI_Tracking!A:Z",
        "options": {
          "valueInputMode": "USER_ENTERED"
        },
        "dataMode": "defineBelow",
        "data": {
          "values": [
            [
              "={{$json.receivedAt}}",
              "={{$json.senderEmail}}",
              "={{$json.leadType}}",
              "={{$json.leadScore}}",
              "={{$json.qualificationTier}}",
              "={{$now}}",
              "={{$json.scoreBreakdown.urgency.level}}",
              "={{$json.phone}}",
              "={{$json.zipCode}}"
            ]
          ]
        }
      },
      "name": "Track KPIs - All Leads",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [560, 500],
      "id": "kpi-tracker-1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "2",
          "name": "Google Sheets account"
        }
      },
      "notes": "Logs all lead metrics for KPI analysis: response time, qualification rate, lead source performance, and conversion tracking."
    }
  ],
  "connections": {
    "Gmail Trigger - HVAC Lead Capture": {
      "main": [
        [
          {
            "node": "Lead Parser & Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lead Parser & Classifier": {
      "main": [
        [
          {
            "node": "HVAC BANT Scoring Engine",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HVAC BANT Scoring Engine": {
      "main": [
        [
          {
            "node": "Lead Router (by Score)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Track KPIs - All Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lead Router (by Score)": {
      "main": [
        [
          {
            "node": "Log to CRM/Google Sheets - Hot Lead",
            "type": "main",
            "index": 0
          },
          {
            "node": "Notify Sales Team - Slack (Hot Lead)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Personalized Response - Hot Lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log to CRM - Warm Lead",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Nurture Email - Warm Lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Analyze Disqualification Reason",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Disqualification Reason": {
      "main": [
        [
          {
            "node": "Cold Lead Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cold Lead Router": {
      "main": [
        [
          {
            "node": "Send Referral Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log to CRM - Cold/Nurture",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Long-Term Nurture Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}
